{"version":3,"sources":["scripts/app.js"],"names":[],"mappings":"AAAA;AACA,CAAC,WAAW;EACV;;EAEA;KACG,OAAO;IACR;MACE;MACA;MACA;MACA;;;;AAIN,CAAC,WAAW;EACV;;;EAEA;KACG,OAAO;KACP,QAAQ,2BAA2B;;EAEtC,SAAS,wBAAwB,WAAW,MAAM;IAChD,IAAI,mBAAmB;;IAEvB,IAAI,UAAU;MACZ,oBAAoB;MACpB,qBAAqB;MACrB,QAAQ;;IAEV,OAAO;;;IAGP,SAAS,mBAAmB,SAAS;MACnC,iBAAiB,KAAK;;;IAGxB,SAAS,sBAAsB;QAC3B,OAAO;;;IAGX,SAAS,OAAO,WAAW,YAAY,UAAU;MAC/C,IAAI,SAAS,UAAU,WAAW;SAC/B,EAAE,MAAM,EAAE,QAAQ;MACrB,IAAI,WAAW,OAAO,KAAK;;MAE3B,GAAG,OAAO,aAAa,YAAY;QACjC,OAAO,SAAS,SAAS,KAAK;aACzB;QACL,OAAO,SAAS;;;;;;AAMxB,CAAC,WAAW;EACV;;;;;EAKA;KACG,OAAO;KACP,UAAU,WAAW;;EAExB,SAAS,UAAU;IACjB,IAAI,YAAY;;QAEZ,aAAa;QACb,OAAO;YACH,WAAW;;QAEf,YAAY;QACZ,cAAc;QACd,kBAAkB;;IAEtB,OAAO;;;;AAIX,CAAC,WAAW;IACR;;;IAEA;SACK,OAAO;SACP,QAAQ,iBAAiB;;IAE9B,SAAS,cAAc,WAAW,MAAM,SAAS;QAC7C,IAAI,cAAc;QAClB,IAAI,QAAQ;;QAEZ,IAAI,UAAU;YACV,sBAAsB;YACtB,cAAc;YACd,eAAe;YACf,kBAAkB;YAClB,kBAAkB;YAClB,WAAW;;QAEf,OAAO;;QAEP,SAAS,aAAa,OAAO;YACzB,KAAK,QAAQ;;;QAGjB,SAAS,cAAc,KAAK,MAAM,OAAO;YACrC,IAAI,QAAQ,KAAK,MAAM,UAAU,aAAa;gBAC1C,IAAI,SAAS,QAAQ;oBACjB,KAAK,MAAM,OAAO;;;YAG1B,IAAI,SAAS,QAAQ;gBACjB,KAAK,MAAM,KAAK,KAAK;mBAClB;gBACH,KAAK,MAAM,MAAM;;;;QAIzB,SAAS,iBAAiB,KAAK,MAAM,OAAO;YACxC,kBAAkB,KAAK,OAAO,KAAK,MAAM,OAAO;;;QAGpD,SAAS,iBAAiB,KAAK,MAAM,OAAO;YACxC,kBAAkB,KAAK,OAAO,KAAK,MAAM,OAAO;;;QAGpD,SAAS,kBAAkB,OAAO,KAAK,MAAM,OAAO,QAAQ;YACxD,IAAI,SAAS,QAAQ;gBACjB,IAAI,QAAQ,MAAM,KAAK,IAAI,SAAS,GAAG,EAAE,OAAO,EAAE,MAAM,QAAQ,MAAM;;gBAEtE,IAAI,WAAW,UAAU;oBACrB,MAAM,KAAK,OAAO,OAAO;uBACtB,IAAI,WAAW,UAAU;oBAC5B,MAAM,KAAK,SAAS;;mBAErB;gBACH,IAAI,WAAW,UAAU;oBACrB,MAAM,MAAM;uBACT,IAAI,WAAW,UAAU;oBAC5B,MAAM,MAAM;;;;;;QAMxB,SAAS,qBAAqB,MAAM,SAAS;YACzC,YAAY,QAAQ;;;QAGxB,SAAS,UAAU,WAAW;YAC1B,IAAI,SAAS,UAAU;YACvB,IAAI,UAAU,OAAO;YACrB,OAAO,QAAQ,SAAS,KAAK;;;QAGjC,SAAS,YAAY,MAAM;YACvB,IAAI,YAAY;gBACZ,MAAM;gBACN,YAAY;;YAEhB,IAAI,UAAU;;;YAGd,OAAO,KAAK;YACZ,KAAK,WAAW,QAAQ,SAAS,MAAM;gBACnC,kBAAkB,MAAM,WAAW,SAAS;;;YAGhD,OAAO;gBACH,QAAQ;gBACR,MAAM;;;;QAId,SAAS,kBAAkB,WAAW,QAAQ,MAAM,UAAU;YAC1D,IAAI,QAAQ;gBACR,MAAM,SAAS,OAAO,QAAQ,MAAM;gBACpC,MAAM,SAAS,OAAO,QAAQ,MAAM;oBAChC,IAAI,YAAY,MAAM;oBACtB,IAAI,eAAe;wBACf,OAAO;wBACP,UAAU;wBACV,QAAQ;;;oBAGZ,IAAI,YAAY,YAAY;wBACxB,IAAI,gBAAgB,YAAY;wBAChC,cAAc,QAAQ,MAAM;2BACzB,IAAI,aAAa,YAAY;wBAChC,OAAO,UAAU,aAAa;2BAC3B;wBACH,KAAK,MAAM,+CAA+C;wBAC1D,OAAO,UAAU;;;gBAGzB,UAAU,SAAS,OAAO,QAAQ,MAAM;oBACpC,OAAO,WAAW;wBACd,MAAM;wBACN,YAAY;;oBAEhB,KAAK,WAAW;oBAChB,MAAM,YAAY,OAAO,MAAM,YAAY,QAAQ;oBACnD,kBAAkB,MAAM,aAAa,OAAO,UAAU,KAAK,UAAU;;gBAEzE,YAAY,SAAS,OAAO,QAAQ,MAAM;oBACtC,OAAO,eAAe,OAAO,MAAM;;gBAEvC,YAAY,SAAS,OAAO,QAAQ,MAAM;oBACtC,OAAO,eAAe,OAAO,MAAM;;gBAEvC,SAAS,SAAS,OAAO,QAAQ,MAAM;oBACnC,IAAI,MAAM,YAAY,UAAU;wBAC5B,OAAO,aAAa,OAAO,MAAM;;;gBAGzC,OAAO,SAAS,OAAO,QAAQ,MAAM;oBACjC,OAAO,WAAW,MAAM;;gBAE5B,aAAa,SAAS,OAAO,QAAQ,MAAM;oBACvC,OAAO,iBAAiB,MAAM;;gBAElC,KAAK,SAAS,OAAO,QAAQ,MAAM;oBAC/B,KAAK,SAAS,MAAM;;gBAExB,KAAK,SAAS,OAAO,QAAQ,MAAM;oBAC/B,KAAK,SAAS,MAAM;;gBAExB,YAAY,SAAS,OAAO,QAAQ,MAAM;oBACtC,KAAK,gBAAgB,MAAM;;gBAE/B,KAAK,SAAS,OAAO,QAAQ,MAAM;oBAC/B,KAAK,SAAS,MAAM;;gBAExB,QAAQ,SAAS,OAAO,QAAQ,MAAM;oBAClC,KAAK,YAAY,MAAM;;gBAE3B,OAAO,SAAS,OAAO,QAAQ,MAAM;oBACjC,OAAO,WAAW,MAAM;;gBAE5B,WAAW,SAAS,OAAO,QAAQ,MAAM;oBACrC,OAAO,eAAe,MAAM;;;;YAIpC,IAAI,EAAE,UAAU,YAAY;gBACxB,KAAK,MAAM;gBACX;;YAEJ,IAAI,OAAO,UAAU;;YAErB,IAAI,aAAa;YACjB,IAAI,WAAW,EAAE,KAAK;;YAEtB,KAAK,IAAI,OAAO,WAAW;gBACvB,IAAI,QAAQ,UAAU,OAAO,OAAO;oBAChC,IAAI,OAAO,MAAM;oBACjB,KAAK,WAAW,YAAY,UAAU;uBACnC;oBACH,KAAK,MAAM,0CAA0C;;;;YAI7D,IAAI,UAAU,WAAW;gBACrB,IAAI,OAAO,MAAM;gBACjB,KAAK,WAAW,YAAY,UAAU;;;YAG1C,OAAO,WAAW,QAAQ;YAC1B,KAAK,KAAK;;;;;AAKtB,CAAC,WAAW;EACV;;;EAEA;KACG,OAAO;KACP,WAAW,kBAAkB;;EAEhC,SAAS,eAAe,QAAQ,UAAU,MAAM,eAAe,yBAAyB;IACtF,IAAI,KAAK;;IAET,GAAG,SAAS;IACZ,GAAG,OAAO;IACV,GAAG,QAAQ;IACX,GAAG,SAAS;IACZ,GAAG,YAAY;IACf,GAAG,UAAU;;;IAGb,GAAG,WAAW;;;IAGd,IAAI;MACF,GAAG,YAAY,OAAO,QAAQ,OAAO,KAAK;MAC1C,MAAM,GAAG;;;;IAIX,GAAG,GAAG,WAAW;MACf,cAAc,UAAU,GAAG,WAAW;QACpC,SAAS,MAAM;UACb,GAAG,SAAS,KAAK;UACjB,GAAG,OAAO,KAAK;;;WAGd;MACL,KAAK,MAAM;;;;IAIb,cAAc,aAAa,GAAG;;IAE9B,SAAS,SAAS,MAAM;MACtB,IAAI,mBAAmB,wBAAwB;MAC/C,QAAQ,QAAQ,kBAAkB,SAAS,SAAS;QAClD,QAAQ,GAAG,QAAQ,GAAG;;;;MAIxB,IAAI,KAAK,QAAQ;QACf,wBAAwB,OAAO,GAAG;UAChC,GAAG,OAAO,WAAW;YACnB,aAAa;;;;;IAKrB,SAAS,aAAa,KAAK;MACzB,GAAG,UAAU;MACb,GAAG,SAAS;MACZ,GAAG,YAAY;;;MAGf,SAAS,UAAU;QACjB,GAAG,YAAY;;QAEf,SAAS,UAAU,EAAE,GAAG,SAAS,SAAS;SACzC;;;;;AAKT,CAAC,WAAW;EACV;;;EAEA;KACG,OAAO;KACP,IAAI;;;EAGP,SAAS,SAAS,MAAM,eAAe;IACrC,cAAc,qBAAqB,WAAW,SAAS,QAAQ,MAAM;OAClE,OAAO,WAAW,EAAE,QAAQ;OAC5B,KAAK,UAAU;OACf,KAAK,cAAc;;;;;;;AAO1B,CAAC,WAAW;EACV;;EAEA;KACG,OAAO;KACP,SAAS,YAAY;KACrB,SAAS,UAAU;;;;AAIxB,CAAC,WAAW;EACV;;;EAEA;KACG,OAAO;KACP,OAAO;;;EAGV,SAAS,OAAO,cAAc,cAAc;;IAE1C,aAAa,aAAa;;;IAG1B,aAAa,YAAY;IACzB,aAAa,UAAU;IACvB,aAAa,gBAAgB;IAC7B,aAAa,oBAAoB;IACjC,aAAa,cAAc;;;;;AAK/B,QAAQ,OAAO,uBAAuB,IAAI,CAAC,kBAAkB,SAAS,gBAAgB,CAAC,eAAe,IAAI,iDAAiD,qUAAqU","file":"scripts/app.js","sourcesContent":["\n(function() {\n  'use strict';\n\n  angular\n    .module('simCitySimDirective',\n    [\n      'ngResource',\n      'ui.bootstrap',\n      'toastr',\n      'schemaForm'\n    ]);\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('simCitySimDirective')\n    .service('SubmitSimulationService', SubmitSimulationService);\n  \n  function SubmitSimulationService($resource, $log) {\n    var onSubmitHandlers = [];\n    \n    var service = {\n      addOnSubmitHandler: addOnSubmitHandler,\n      getOnSubmitHandlers: getOnSubmitHandlers,\n      submit: submit\n    };\n    return service;\n    \n    // Handler should be function(schema, form) {}\n    function addOnSubmitHandler(handler) {\n      onSubmitHandlers.push(handler);\n    }\n    \n    function getOnSubmitHandlers() {\n        return onSubmitHandlers;\n    }\n  \n    function submit(targetURL, parameters, callback) {\n      var poster = $resource(targetURL, {},\n         { send: { method: 'GET' } });\n      var submited = poster.send(parameters);\n\n      if(typeof callback === 'function') {\n        return submited.$promise.then(callback);\n      } else {\n        return submited.$promise;\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // var scripts = document.getElementsByTagName(\"script\")\n  // var currentScriptPath = scripts[scripts.length-1].src;\n\n  angular\n    .module('simCitySimDirective')\n    .directive('simForm', SimForm);\n\n  function SimForm() {\n    var directive = {\n        // templateUrl: currentScriptPath.replace('directive.js', 'directive.html'),  // Dev code\n        templateUrl: 'app/components/sim-city/simform.directive.html',\n        scope: {\n            schemaurl: '@'\n        },\n        controller: 'FormController',\n        controllerAs: 'vm',\n        bindToController: true\n    };\n    return directive;\n  }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('simCitySimDirective')\n        .service('SchemaService', SchemaService);\n\n    function SchemaService($resource, $log, $filter) {\n        var customTypes = {};\n        var model = {};\n\n        var service = {\n            addCustomTypeHandler: addCustomTypeHandler,\n            setFormModel: setFormModel,\n            modelAddValue: modelAddValue,\n            modelUpdateValue: modelUpdateValue,\n            modelDeleteValue: modelDeleteValue,\n            getSchema: getSchema\n        };\n        return service;\n\n        function setFormModel(model) {\n            this.model = model;\n        }\n\n        function modelAddValue(key, type, value) {\n            if (typeof (this.model[key]) === 'undefined') {\n                if (type === 'list') {\n                    this.model[key] = [];\n                }\n            }\n            if (type === 'list') {\n                this.model[key].push(value);\n            } else {\n                this.model.key = value;\n            }\n        }\n\n        function modelUpdateValue(key, type, value) {\n            _updateModelValue(this.model, key, type, value, 'update');\n        }\n\n        function modelDeleteValue(key, type, value) {\n            _updateModelValue(this.model, key, type, value, 'delete');\n        }\n\n        function _updateModelValue(model, key, type, value, action) {\n            if (type === 'list') {\n                var index = model[key].map(function(f) { return f.id }).indexOf(value.id);\n\n                if (action === 'delete') {\n                    model[key].splice(index, 1)\n                } else if (action === 'update') {\n                    model[key][index] = value;\n                }\n            } else {\n                if (action === 'delete') {\n                    model.key = undefined\n                } else if (action === 'update') {\n                    model.key = value;\n                }\n            }\n        }\n\n        // Handler should be function(schema, form) {}\n        function addCustomTypeHandler(type, handler) {\n            customTypes[type] = handler;\n        }\n\n        function getSchema(schemaURL) {\n            var schema = $resource(schemaURL);\n            var request = schema.get();\n            return request.$promise.then(parseSchema);\n        }\n\n        function parseSchema(data) {\n            var newSchema = {\n                type: 'object',\n                properties: {}\n            };\n            var newForm = [];\n\n            // Transform Resource object to JSON\n            data = data.toJSON();\n            data.parameters.forEach(function(item) {\n                applyRulesForItem(item, newSchema, newForm, newForm);\n            });\n\n            return {\n                schema: newSchema,\n                form: newForm\n            };\n        }\n\n        function applyRulesForItem(parameter, schema, form, mainForm) {\n            var rules = {\n                name: function(param, schema, form) { },\n                type: function(param, schema, form) {\n                    var paramType = param['type'];\n                    var typeMappings = {\n                        'str': 'string',\n                        'number': 'number',\n                        'list': 'array'\n                    };\n\n                    if (customTypes[paramType]) {\n                        var customTypeFun = customTypes[paramType];\n                        customTypeFun(schema, form, mainForm);\n                    } else if (typeMappings[paramType]) {\n                        schema['type'] = typeMappings[paramType];\n                    } else {\n                        $log.debug('SchemaService: no mapping known for type: ' + paramType);\n                        schema['type'] = paramType;\n                    }\n                },\n                contents: function(param, schema, form) {\n                    schema['items'] = {\n                        type: 'object',\n                        properties: {}\n                    };\n                    form['items'] = [];\n                    param['contents'].name = param['contents'].name || '_unnamed';\n                    applyRulesForItem(param['contents'], schema['items'], form['items'], mainForm);\n                },\n                min_length: function(param, schema, form) {\n                    schema['minLength'] = Number(param['min_length']);\n                },\n                max_length: function(param, schema, form) {\n                    schema['maxLength'] = Number(param['max_length']);\n                },\n                default: function(param, schema, form) {\n                    if (param['type'] === 'number') {\n                        schema['default'] = Number(param['default']);\n                    }\n                },\n                title: function(param, schema, form) {\n                    schema['title'] = param['title'];\n                },\n                description: function(param, schema, form) {\n                    schema['description'] = param['description'];\n                },\n                min: function(param, schema, form) {\n                    form['min'] = param['min'];\n                },\n                max: function(param, schema, form) {\n                    form['max'] = param['max'];\n                },\n                startEmpty: function(param, schema, form) {\n                    form['startEmpty'] = param['startEmpty']\n                },\n                add: function(param, schema, form) {\n                    form['add'] = param['add']\n                },\n                remove: function(param, schema, form) {\n                    form['remove'] = param['remove']\n                },\n                layer: function(param, schema, form) {\n                    schema['layer'] = param['layer']\n                },\n                featureId: function(param, schema, form) {\n                    schema['featureId'] = param['featureId']\n                }\n            };\n\n            if (!('name' in parameter)) {\n                $log.debug('No name present in parameter! Cannot process further.');\n                return;\n            }\n            var name = parameter['name'];\n\n            var schemaItem = {};\n            var formItem = { key: name };\n\n            for (var key in parameter) {\n                if (key !== 'type' && key in rules) {\n                    var rule = rules[key];\n                    rule(parameter, schemaItem, formItem, mainForm);\n                } else {\n                    $log.debug('SchemaService: no rule know for key: ' + key);\n                }\n            }\n            // Perform type handlers last so they can use the other values\n            if ('type' in parameter) {\n                var rule = rules['type'];\n                rule(parameter, schemaItem, formItem, mainForm);\n            }\n\n            schema.properties[name] = schemaItem;\n            form.push(formItem);\n        }\n    }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('simCitySimDirective')\n    .controller('FormController', FormController);\n\n  function FormController($scope, $timeout, $log, SchemaService, SubmitSimulationService) {\n    var vm = this;\n\n    vm.schema = {};\n    vm.form = [];\n    vm.model = {};\n    vm.hidden = true;\n    vm.startFade = false;\n    vm.message = '';\n\n    // Functions the controller exposes\n    vm.onSubmit = onSubmit;\n\n    // Initialize controller\n    try {\n      vm.schemaurl = $scope.$parent.widget.data.schemaurl;\n    } catch(e) {\n      // Do nothing...\n    }\n\n    if(vm.schemaurl) {\n      SchemaService.getSchema(vm.schemaurl).then(\n        function(data) {\n          vm.schema = data.schema;\n          vm.form = data.form;\n        }\n      );\n    } else {\n      $log.debug('SimCityDirective.FormController: no URL provided');\n    }\n    \n    // Add the model of this form to the schema service so it can be updated\n    SchemaService.setFormModel(vm.model);\n\n    function onSubmit(form) {\n      var onSubmitHandlers = SubmitSimulationService.getOnSubmitHandlers();\n      angular.forEach(onSubmitHandlers, function(handler) {\n        handler(vm.schema, vm.model);  \n      });\n      \n      // Then we check if the form is valid\n      if (form.$valid) {\n        SubmitSimulationService.submit(vm.schemaurl,\n          vm.model, function() {\n            flashMessage('Form has been submitted!');\n          });\n      }\n    }\n\n    function flashMessage(msg) {\n      vm.message = msg;\n      vm.hidden = false;  // Show\n      vm.startFade = false;\n\n      // After 5 seconds, fade\n      $timeout(function(){\n        vm.startFade = true;\n        // and then hide\n        $timeout(function(){ vm.hidden = true; }, 500);\n      }, 2000);\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('simCitySimDirective')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log, SchemaService) {\n    SchemaService.addCustomTypeHandler('point2d', function(schema, form) {\n       schema['items'] = { 'type': 'object' };\n       form['type'] = 'template'\n       form['template'] = '<div>({{item.x}}, {{item.y}})</div>' \n    });\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('simCitySimDirective')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('simCitySimDirective')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"simCitySimDirective\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/sim-city/simform.directive.html\",\"<div><div class=\\\"alert alert-success\\\" ng-hide=\\\"vm.hidden\\\" ng-class=\\\"{fade: vm.startFade}\\\">{{ vm.message }}</div><form name=\\\"myForm\\\" sf-schema=\\\"vm.schema\\\" sf-form=\\\"vm.form\\\" sf-model=\\\"vm.model\\\" sf-options=\\\"\\\"></form><button ng-click=\\\"vm.onSubmit(myForm)\\\" class=\\\"btn btn-success\\\">Submit</button></div>\");}]);"],"sourceRoot":"/source/"}