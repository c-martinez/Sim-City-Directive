{"version":3,"sources":["scripts/app.js"],"names":[],"mappings":"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","file":"scripts/app.js","sourcesContent":["\n(function() {\n  'use strict';\n\n  angular\n    .module('simCitySimDirective',\n    [\n      'ngResource',\n      'ui.bootstrap',\n      'toastr',\n      'schemaForm'\n    ]);\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('simCitySimDirective')\n    .service('SubmitSimulationService', SubmitSimulationService);\n\n  function SubmitSimulationService($resource, $log) {\n    var service = {\n      submit: submit\n    };\n    return service;\n\n    function submit(targetURL, parameters, callback) {\n      var poster = $resource(targetURL, {},\n         { send: { method: 'GET' } });\n      var submited = poster.send(parameters);\n\n      if(typeof callback === 'function') {\n        return submited.$promise.then(callback);\n      } else {\n        return submited.$promise;\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // var scripts = document.getElementsByTagName(\"script\")\n  // var currentScriptPath = scripts[scripts.length-1].src;\n\n  angular\n    .module('simCitySimDirective')\n    .directive('simForm', SimForm);\n\n  function SimForm() {\n    var directive = {\n        // templateUrl: currentScriptPath.replace('directive.js', 'directive.html'),  // Dev code\n        templateUrl: 'app/components/sim-city/simform.directive.html',\n        scope: {\n            schemaurl: '@'\n        },\n        controller: 'FormController',\n        controllerAs: 'vm',\n        bindToController: true\n    };\n    return directive;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('simCitySimDirective')\n    .service('SchemaService', SchemaService);\n\n  function SchemaService($resource, $log) {\n    var customTypes = {};\n\n    var service = {\n      addCustomTypeHandler: addCustomTypeHandler,\n      getSchema: getSchema\n    };\n    return service;\n\n    // Handler should be function(schema, form) {}\n    function addCustomTypeHandler(type, handler) {\n      customTypes[type] = handler;\n    }\n\n    function getSchema(schemaURL) {\n      var schema = $resource(schemaURL);\n      var request = schema.get();\n      return request.$promise.then(parseSchema);\n    }\n\n    function parseSchema(data) {\n      var newSchema = {\n        type: 'object',\n        properties: {}\n      };\n      var newForm   = [];\n\n      // Transform Resource object to JSON\n      data = data.toJSON();\n      data.parameters.forEach(function(item) {\n        applyRulesForItem(item, newSchema, newForm);\n      });\n\n      return {\n        schema: newSchema,\n        form:   newForm\n      };\n    }\n\n    function applyRulesForItem(parameter, schema, form) {\n      var rules = {\n        name: function(param, schema, form) {},\n        type: function(param, schema, form) {\n          var paramType = param['type'];\n          var typeMappings = {\n            'str': 'string',\n            'number': 'number',\n            'list': 'array'\n          };\n\n          if(customTypes[paramType]) {\n            var customTypeFun = customTypes[paramType];\n            customTypeFun(schema, form);\n          } else if(typeMappings[paramType]) {\n            schema['type'] = typeMappings[paramType];\n          } else {\n            $log.debug('SchemaService: no mapping known for type: ' + paramType);\n            schema['type'] = paramType;\n          }\n        },\n        contents: function(param, schema, form) {\n          schema['items'] = {\n            type: 'object',\n            properties: {}\n          };\n          form['items'] = [];\n          param['contents'].name = param['contents'].name || '_unnamed';\n          applyRulesForItem(param['contents'], schema['items'], form['items']);\n        },\n        min_length: function(param, schema, form) {\n          schema['minLength'] = Number(param['min_length']);\n        },\n        max_length: function(param, schema, form) {\n          schema['maxLength'] = Number(param['max_length']);\n        },\n        default: function(param, schema, form) {\n          if ( param['type'] === 'number' ) {\n            schema['default'] = Number(param['default']);\n          }\n        },\n        title: function(param, schema, form) {\n          schema['title'] = param['title'];\n        },\n        description: function(param, schema, form) {\n          schema['description'] = param['description'];\n        },\n        min: function(param, schema, form) {\n          form['min'] = param['min'];\n        },\n        max: function(param, schema, form) {\n          form['max'] = param['max'];\n        }\n      };\n\n      if(!('name' in parameter)) {\n        $log.debug('No name present in parameter! Cannot process further.');\n        return;\n      }\n      var name = parameter['name'];\n\n      var schemaItem = {};\n      var formItem = { key: name };\n\n      for(var key in parameter) {\n        if(key in rules) {\n          var rule = rules[key];\n          rule(parameter, schemaItem, formItem);\n        } else {\n          $log.debug('SchemaService: no rule know for key: ' + key);\n        }\n      }\n\n      schema.properties[name] = schemaItem;\n      form.push(formItem);\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('simCitySimDirective')\n    .controller('FormController', FormController);\n\n  function FormController($scope, $timeout, $log, SchemaService, SubmitSimulationService) {\n    var vm = this;\n\n    vm.schema = {};\n    vm.form = [];\n    vm.model = {};\n    vm.hidden = true;\n    vm.startFade = false;\n    vm.message = '';\n\n    // Functions the controller exposes\n    vm.onSubmit = onSubmit;\n\n    // Initialize controller\n    try {\n      vm.schemaurl = $scope.$parent.widget.data.schemaurl;\n    } catch(e) {\n      // Do nothing...\n    }\n\n    if(vm.schemaurl) {\n      SchemaService.getSchema(vm.schemaurl).then(\n        function(data) {\n          vm.schema = data.schema;\n          vm.form = data.form;\n        }\n      );\n    } else {\n      $log.debug('SimCityDirective.FormController: no URL provided');\n    }\n\n    function onSubmit(form) {\n      // Then we check if the form is valid\n      if (form.$valid) {\n        SubmitSimulationService.submit(vm.schemaurl,\n          vm.model, function() {\n            flashMessage('Form has been submitted!');\n          });\n      }\n    }\n\n    function flashMessage(msg) {\n      vm.message = msg;\n      vm.hidden = false;  // Show\n      vm.startFade = false;\n\n      // After 5 seconds, fade\n      $timeout(function(){\n        vm.startFade = true;\n        // and then hide\n        $timeout(function(){ vm.hidden = true; }, 500);\n      }, 2000);\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('simCitySimDirective')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log, SchemaService) {\n    SchemaService.addCustomTypeHandler('point2d', function(schema, form) {\n      schema['items'] = { 'type': 'object' };\n      form['type'] = 'template';\n      form['template'] = '<div>Point 2D template!</div>';\n    });\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('simCitySimDirective')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('simCitySimDirective')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"simCitySimDirective\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/sim-city/simform.directive.html\",\"<div><div class=\\\"alert alert-success\\\" ng-hide=\\\"vm.hidden\\\" ng-class=\\\"{fade: vm.startFade}\\\">{{ vm.message }}</div><form name=\\\"myForm\\\" sf-schema=\\\"vm.schema\\\" sf-form=\\\"vm.form\\\" sf-model=\\\"vm.model\\\" sf-options=\\\"\\\"></form><button ng-click=\\\"vm.onSubmit(myForm)\\\" class=\\\"btn btn-success\\\">Submit</button></div>\");}]);"],"sourceRoot":"/source/"}